{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","Order","order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","react_default","a","createElement","style","textTransform","display","margin","border","padding","key","console","log","className","classes","Number","parseFloat","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,MAAA,gJCqCHC,EAnCD,SAACC,GACX,IAAMC,EAAc,GAEpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC7BA,EAAYE,KACR,CACIC,KAAKF,EACLG,OAAQL,EAAMC,YAAYC,KAI1C,IAAMI,EAAkBL,EAAYM,IAAK,SAAAC,GACrC,OAAOC,EAAAC,EAAAC,cAAA,QACCC,MAAO,CACHC,cAAc,aACdC,QAAQ,eACRC,OAAO,QACPC,OAAO,iBACPC,QAAQ,OAGZC,IAAKV,EAAGJ,MAAOI,EAAGJ,KATnB,KAS2BI,EAAGH,OAT9B,OAcX,OAHAc,QAAQC,IAAIpB,EAAMC,aAClBkB,QAAQC,IAAId,GACZa,QAAQC,IAAIpB,GAERS,EAAAC,EAAAC,cAAA,OAAKU,UAAWC,IAAQxB,OACpBW,EAAAC,EAAAC,cAAA,yBAAiBL,GACjBG,EAAAC,EAAAC,cAAA,oBAAWF,EAAAC,EAAAC,cAAA,qBAAaY,OAAOC,WAAWxB,EAAMyB,OAAOC,QAAQ,uCCvBjEC,8LAGEC,KAAK5B,MAAM6B,cAAcD,KAAK5B,MAAM8B,MAAOF,KAAK5B,MAAM+B,yCAItD,IAAIC,EAAOvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,MAYX,OAVKL,KAAK5B,MAAMkC,UAEZF,EAAQJ,KAAK5B,MAAMgC,OAAOzB,IAAI,SAAAR,GAAK,OAC3BU,EAAAC,EAAAC,cAACb,EAAD,CACKoB,IAAKnB,EAAMoC,GACXlC,YAAaF,EAAME,YACnBwB,MAAO1B,EAAM0B,WAK1BhB,EAAAC,EAAAC,cAAA,WACKqB,UArBII,aA6CNC,sBAfS,SAACC,GACrB,MAAO,CACHN,OAAOM,EAAMvC,MAAMiC,OACnBE,QAAQI,EAAMvC,MAAMmC,QACpBJ,MAAMQ,EAAMC,KAAKT,MACjBC,OAAOO,EAAMC,KAAKR,SAIC,SAAAS,GACvB,MAAO,CACHX,cAAe,SAACC,EAAMC,GAAP,OAAkBS,EAASC,IAAoBX,EAAMC,OAI7DM,CAA6CK,YAAiBf,EAAOgB","file":"static/js/2.c68a353f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__1sfD1\"};","import React from 'react'\r\nimport classes from './Order.module.css'\r\n\r\nconst order = (props) => {\r\n    const ingredients = [];\r\n\r\n    for (let ingredientName in props.ingredients) {\r\n        ingredients.push(\r\n            {\r\n                name:ingredientName, \r\n                amount: props.ingredients[ingredientName]\r\n            }\r\n        );\r\n    }\r\nconst ingredientOutput= ingredients.map (ig=> {\r\n    return <span\r\n            style={{\r\n                textTransform:'capitalize',\r\n                display:'inline-block',\r\n                margin:'0 8px',\r\n                border:'1px solid #ccc',\r\n                padding:'5px'\r\n            \r\n            }}\r\n            key={ig.name}>{ig.name} ({ig.amount})</span>;\r\n})\r\nconsole.log(props.ingredients)\r\nconsole.log(ingredientOutput)\r\nconsole.log(props)\r\nreturn(\r\n    <div className={classes.Order}>\r\n        <p>Ingredients: {ingredientOutput}</p>\r\n        <p> Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n    </div>\r\n)\r\n\r\n}\r\n\r\nexport default order;\r\n","\r\nimport React, {Component} from 'react'\r\nimport axios from '../../axios-orders'\r\nimport Order from '../../components/Order/Order'\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\r\nimport {connect} from 'react-redux'\r\nimport * as actions from '../../store/actions/index'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\n\r\nclass Orders extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchOrders(this.props.token, this.props.userId);\r\n    }\r\n\r\n    render() {\r\n        let orders=<Spinner />;\r\n\r\n        if (!this.props.loading) {\r\n          \r\n            orders= this.props.orders.map(order => (\r\n                    <Order\r\n                         key={order.id}\r\n                         ingredients={order.ingredients}\r\n                         price={order.price}/>\r\n                ) )\r\n            \r\n        }\r\n        return (\r\n            <div>\r\n                {orders}\r\n            </div>\r\n            \r\n        )\r\n            \r\n        \r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        orders:state.order.orders,\r\n        loading:state.order.loading,\r\n        token:state.auth.token,\r\n        userId:state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token,userId) => dispatch(actions.fetchOrders(token,userId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders,axios));"],"sourceRoot":""}