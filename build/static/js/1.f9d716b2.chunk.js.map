{"version":3,"sources":["components/UI/Input/Input.js","components/UI/Input/Input.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Input_module_css__WEBPACK_IMPORTED_MODULE_1__","_Input_module_css__WEBPACK_IMPORTED_MODULE_1___default","input","props","inputElement","inputClasses","classes","InputElement","invalid","shouldValidate","touched","push","Invalid","elementType","a","createElement","Object","assign","className","join","onChange","changed","elementConfig","value","options","map","key","displayValue","Input","Label","label","module","exports","CheckoutSummary","ContactData","checkoutSummary","react_default","style","width","margin","Burger","ingredients","Button","btnType","clicked","checkoutCancelled","checkoutContinued","state","orderForm","name","type","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","_this","order","ings","price","orderData","userId","onOrderBurger","token","inputChangedHandler","inputIdentifier","updatedFormElement","updateObject","target","checkValidity","updatedOrderForm","defineProperty","setState","_this2","this","formElementsArray","id","config","form","onSubmit","formElement","disabled","loading","Spinner","Component","connect","burgerBuilder","totalPrice","purchased","auth","dispatch","actions","withErrorHandler","axios","Checkout","checkoutCancelledHandler","history","goBack","checkoutContinuedHandler","replace","summary","Redirect","to","console","log","purchasedRedirect","Route","path","match","component"],"mappings":"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","file":"static/js/1.f9d716b2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport classes from './Input.module.css'\r\n\r\nconst input =(props)=> {\r\n    let inputElement=null;\r\n    const inputClasses=[classes.InputElement];\r\n\r\n    if (props.invalid && props.shouldValidate && props.touched) {\r\n        inputClasses.push(classes.Invalid);\r\n    }\r\n\r\n    switch (props.elementType) {\r\n        case ('input') :\r\n            inputElement=<input\r\n            className={inputClasses.join(' ')} \r\n            onChange={props.changed}\r\n            {...props.elementConfig} \r\n            value={props.value}/>;\r\n            break;\r\n\r\n        case ('select'):\r\n            inputElement= (\r\n            <select\r\n                className= {inputClasses.join(' ')} \r\n                {...props.elementConfig} \r\n                value={props.value}\r\n                onChange={props.changed}>\r\n                {props.elementConfig.options.map(options => (\r\n                    <option key= {options.value} value={options.value}>{options.displayValue}</option>\r\n                ))}\r\n\r\n            </select>\r\n            );\r\n            break;\r\n\r\n        default:\r\n            inputElement = <input \r\n            className={inputClasses}\r\n            {...props.elementConfig} \r\n            value={props.value}\r\n            onChange={props.changed}/>\r\n\r\n    }\r\n\r\nreturn (\r\n    <div className={classes.Input} >\r\n        <label className={classes.Label} >{props.label}</label>\r\n        {inputElement}\r\n\r\n    </div>\r\n)\r\n   \r\n\r\n}\r\n\r\nexport default input","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__nZZUg\",\"Label\":\"Input_Label__dDRUJ\",\"InputElement\":\"Input_InputElement__qT9tF\",\"Invalid\":\"Input_Invalid__4u4d2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3amaI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__2Gc11\"};","import React from 'react'\r\n\r\nimport Burger from '../../Burger/Burger'\r\nimport Button from '../../UI/Button/Button'\r\nimport classes from './CheckoutSummary.module.css'\r\n\r\nconst checkoutSummary = (props) => {\r\n\r\n\r\n    return (\r\n        <div className={classes.CheckoutSummary} >\r\n            <h1>We hope it tastes well</h1>\r\n            <div style={{width:'100%', margin:'auto'}}>\r\n\r\n                    <Burger ingredients={props.ingredients}/>\r\n\r\n            </div>\r\n            <div>\r\n            <Button \r\n                    btnType=\"Danger\" \r\n                    clicked={props.checkoutCancelled}> Cancel</Button>\r\n\r\n            <Button \r\n                    btnType=\"Success\" \r\n                    clicked={props.checkoutContinued}>Continue</Button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default checkoutSummary","import React, {Component} from 'react'\r\nimport classes from './ContactData.module.css'\r\nimport Button from '../../../components/UI/Button/Button'\r\nimport axios from '../../../axios-orders'\r\nimport Spinner from '../../../components/UI/Spinner/Spinner'\r\nimport Input from '../../../components/UI/Input/Input'\r\nimport {connect} from 'react-redux'\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler'\r\nimport * as actions from '../../../store/actions/index'\r\nimport {updateObject,checkValidity} from '../../../shared/utility'\r\n\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm: {\r\n            \r\n            name:{\r\n                elementType:'input',\r\n                elementConfig: {\r\n                    type:'text',\r\n                    placeholder:'YourName'\r\n                },\r\n                value:'',\r\n                validation :{\r\n                    required:true\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            street:{\r\n                elementType:'input',\r\n                elementConfig: {\r\n                    type:'text',\r\n                    placeholder:'Street'\r\n                },\r\n                value:'',\r\n                validation :{\r\n                    required:true\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            zipCode:{\r\n                elementType:'input',\r\n                elementConfig: {\r\n                    type:'text',\r\n                    placeholder:'ZIP Code'\r\n                },\r\n                value:'',\r\n                validation :{\r\n                    required:true,\r\n                    minLength:5,\r\n                    maxLength:5\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            country:{\r\n                elementType:'input',\r\n                elementConfig: {\r\n                    type:'text',\r\n                    placeholder:'Country'\r\n                },\r\n                value:'',\r\n                validation :{\r\n                    required:true\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            email:{\r\n                elementType:'input',\r\n                elementConfig: {\r\n                    type:'email',\r\n                    placeholder:'Your E-mail'\r\n                },\r\n                value:'',\r\n                validation :{\r\n                    required:true\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            deliveryMethod:{\r\n                elementType:'select',\r\n                elementConfig: {\r\n                    options:[\r\n                        {value:'fastest', displayValue: 'Fastest'},\r\n                        {value:'cheapest', displayValue: 'Cheapest'}\r\n                    ]\r\n                },\r\n                value:'fastest',\r\n                validation:{},\r\n                valid:true\r\n            },\r\n\r\n        },\r\n        formIsValid:false\r\n    }\r\n\r\n    orderHandler=(event) => {\r\n        event.preventDefault();\r\n\r\n        const formData= {};\r\n\r\n        for (let formElementIdentifier in this.state.orderForm) {\r\n            formData[formElementIdentifier]=this.state.orderForm[formElementIdentifier].value\r\n\r\n        }\r\n\r\n        const order = {\r\n            ingredients:this.props.ings,\r\n            price:this.props.price,\r\n            orderData:formData,\r\n            userId:this.props.userId\r\n            \r\n        }\r\n        this.props.onOrderBurger(order,this.props.token);\r\n\r\n\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        \r\n       const updatedFormElement= updateObject(this.state.orderForm[inputIdentifier],{\r\n           value:event.target.value,\r\n           valid:checkValidity(event.target.value,this.state.orderForm[inputIdentifier].validation),\r\n           touched:true\r\n       })\r\n       const updatedOrderForm=updateObject(this.state.orderForm,{\r\n           [inputIdentifier]: updatedFormElement\r\n       })\r\n\r\n       let formIsValid=true;\r\n\r\n       for (let inputIdentifier in updatedOrderForm) {\r\n           formIsValid=updatedOrderForm[inputIdentifier].valid &&formIsValid;\r\n       }\r\n       this.setState({orderForm:updatedOrderForm, formIsValid:formIsValid});\r\n    \r\n    }\r\n\r\n    render( ) {\r\n        \r\n        const formElementsArray =[];\r\n        for (let key in this.state.orderForm) {\r\n            formElementsArray.push({\r\n                id:key,\r\n                config:this.state.orderForm[key]\r\n            })\r\n        }\r\n        let form=(\r\n            \r\n            <form onSubmit={this.orderHandler} >\r\n            \r\n            {formElementsArray.map(formElement=> (\r\n                <Input\r\n                    key={formElement.id}\r\n                    elementType={formElement.config.elementType}\r\n                    elementConfig={formElement.config.elementConfig}\r\n                    value={formElement.config.value} \r\n                    invalid={!formElement.config.valid}\r\n                    shouldValidate={formElement.config.validation}\r\n                    touched={formElement.config.touched}\r\n                    changed={(event)=>this.inputChangedHandler(event,formElement.id)} />\r\n            ))}\r\n            <Button  btnType='Success' disabled={!this.state.formIsValid} >ORDER</Button>\r\n            </form>\r\n        \r\n        );\r\n        if (this.props.loading) {\r\n            form=<Spinner />;\r\n        }\r\n        return (\r\n            <div className={classes.ContactData}>\r\n            <h4>Enter your Contact Data</h4>\r\n                {form}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state=> {\r\n    return {\r\n        ings:state.burgerBuilder.ingredients,\r\n        price:state.burgerBuilder.totalPrice,\r\n        loading:state.order.loading,\r\n        purchased:state.order.purchased,\r\n        token:state.auth.token,\r\n        userId:state.auth.userId\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\r\n    return {\r\n    onOrderBurger: (orderData,token) => dispatch(actions.purchaseBurger(orderData,token))\r\n\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData,axios));","import React, {Component} from 'react'\r\nimport {Route, Redirect} from 'react-router-dom'\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary'\r\nimport ContactData from '../../containers/Checkout/ContactData/ContactData'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\n\r\nclass Checkout extends Component {\r\n\r\n    checkoutCancelledHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinuedHandler= () => {\r\n        this.props.history.replace('/checkout/contact-data')\r\n        \r\n    }\r\n\r\n    render() {\r\n        let summary = <Redirect to=\"/\"></Redirect>\r\n        \r\n        if (this.props.ings) {\r\n            console.log(this.props.purchased)\r\n            const purchasedRedirect = this.props.purchased? <Redirect to=\"/\" /> :null\r\n            summary=(\r\n                <div>\r\n                    {purchasedRedirect}\r\n                    <CheckoutSummary\r\n                         ingredients={this.props.ings} \r\n                         checkoutCancelled={this.checkoutCancelledHandler}\r\n                         checkoutContinued={this.checkoutContinuedHandler}\r\n                         />\r\n                    <Route path={this.props.match.path + '/contact-data'} component= {ContactData}/>   \r\n                </div>\r\n                \r\n            )\r\n        }        \r\n        return summary;\r\n                    \r\n\r\n            \r\n\r\n\r\n        \r\n    }\r\n\r\n}\r\nconst mapStateToProps = state=> {\r\n    return {\r\n        ings:state.burgerBuilder.ingredients,\r\n        purchased:state.order.purchased\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(Checkout);"],"sourceRoot":""}